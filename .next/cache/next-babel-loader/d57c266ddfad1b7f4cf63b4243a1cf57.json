{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/eoinmurray/arbury/website/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Pane, Heading, Paragraph, Image } from 'evergreen-ui';\nimport formatDistance from 'date-fns/formatDistance';\nimport { useEffect, useState } from 'react';\nimport Head from 'next/head';\n\nvar client = require('contentful').createClient({\n  space: process.env.CONTENTFUL_SPACE_ID,\n  accessToken: process.env.CONTENTFUL_ACCESS_TOKEN\n});\n\nfunction HomePage() {\n  function fetchContentTypes() {\n    return _fetchContentTypes.apply(this, arguments);\n  }\n\n  function _fetchContentTypes() {\n    _fetchContentTypes = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var types;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return client.getContentTypes();\n\n            case 2:\n              types = _context2.sent;\n\n              if (!types.items) {\n                _context2.next = 5;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", types.items);\n\n            case 5:\n              console.log('Error getting Content Types.');\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _fetchContentTypes.apply(this, arguments);\n  }\n\n  function fetchEntriesForContentType(_x) {\n    return _fetchEntriesForContentType.apply(this, arguments);\n  }\n\n  function _fetchEntriesForContentType() {\n    _fetchEntriesForContentType = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(contentType) {\n      var entries;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return client.getEntries({\n                content_type: contentType.sys.id\n              });\n\n            case 2:\n              entries = _context3.sent;\n\n              if (!entries.items) {\n                _context3.next = 5;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", entries.items);\n\n            case 5:\n              console.log(\"Error getting Entries for \".concat(contentType.name, \".\"));\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _fetchEntriesForContentType.apply(this, arguments);\n  }\n\n  var _useState = useState([]),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  useEffect(function () {\n    function getPosts() {\n      return _getPosts.apply(this, arguments);\n    }\n\n    function _getPosts() {\n      _getPosts = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var contentTypes, allPosts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetchContentTypes();\n\n              case 2:\n                contentTypes = _context.sent;\n                _context.next = 5;\n                return fetchEntriesForContentType(contentTypes[0]);\n\n              case 5:\n                allPosts = _context.sent;\n                setPosts(_toConsumableArray(allPosts));\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getPosts.apply(this, arguments);\n    }\n\n    getPosts();\n  }, []);\n  if (posts.length > 0) console.log(posts[0].fields);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Next.js + Contentful\"), __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=EB+Garamond&display=swap\",\n    rel: \"stylesheet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), __jsx(Pane, {\n    padding: 40,\n    marginX: \"auto\",\n    maxWidth: 600,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(Heading, {\n    marginY: 32,\n    color: \"black\",\n    fontSize: 45,\n    fontFamily: \"EB Garamond\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"The Arburian\"), __jsx(Heading, {\n    marginY: 32 // color=\"#\"\n    ,\n    fontSize: 45,\n    fontFamily: \"EB Garamond\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"A magazine of wealth and taste.\"), posts.length > 0 ? posts.map(function (p) {\n    return __jsx(Pane, {\n      marginBottom: 40,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(Pane, {\n      width: 600,\n      height: 200,\n      backgroundSize: \"cover\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundPosition: \"50% 50%;\",\n      backgroundImage: \"url(\".concat(p.fields.heroImage.fields.file.url, \")\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), __jsx(Heading, {\n      marginTop: 16,\n      color: \"black\",\n      size: 800,\n      fontFamily: \"EB Garamond\",\n      fontWeight: 600,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, p.fields.title), __jsx(Paragraph, {\n      marginY: 16,\n      fontFamily: \"EB Garamond\",\n      fontSize: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, p.fields.description), __jsx(Pane, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, __jsx(Paragraph, {\n      fontFamily: \"EB Garamond\",\n      fontSize: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"by \", p.fields.author.fields.name, \" \", formatDistance(new Date(p.fields.publishDate), new Date(), {\n      addSuffix: true\n    }))));\n  }) : null));\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/eoinmurray/arbury/website/pages/index.js"],"names":["Pane","Heading","Paragraph","Image","formatDistance","useEffect","useState","Head","client","require","createClient","space","process","env","CONTENTFUL_SPACE_ID","accessToken","CONTENTFUL_ACCESS_TOKEN","HomePage","fetchContentTypes","getContentTypes","types","items","console","log","fetchEntriesForContentType","contentType","getEntries","content_type","sys","id","entries","name","posts","setPosts","getPosts","contentTypes","allPosts","length","fields","map","p","heroImage","file","url","title","description","author","Date","publishDate","addSuffix"],"mappings":"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","sourcesContent":["import { Pane, Heading, Paragraph, Image } from 'evergreen-ui'\nimport formatDistance from 'date-fns/formatDistance'\nimport { useEffect, useState } from 'react'\nimport Head from 'next/head'\n\nconst client = require('contentful').createClient({\n  space: process.env.CONTENTFUL_SPACE_ID,\n  accessToken: process.env.CONTENTFUL_ACCESS_TOKEN\n})\n\nfunction HomePage() {\n  async function fetchContentTypes() {\n    const types = await client.getContentTypes()\n    if (types.items) return types.items\n    console.log('Error getting Content Types.')\n  }\n\n  async function fetchEntriesForContentType(contentType) {\n    const entries = await client.getEntries({\n      content_type: contentType.sys.id\n    })\n\n    if (entries.items) return entries.items\n    console.log(`Error getting Entries for ${contentType.name}.`)\n  }\n\n  const [posts, setPosts] = useState([])\n\n  useEffect(() => {\n    async function getPosts() {\n      const contentTypes = await fetchContentTypes()\n      const allPosts = await fetchEntriesForContentType(contentTypes[0])\n      setPosts([...allPosts])\n    }\n    getPosts()\n  }, [])\n\n  if (posts.length > 0) console.log(posts[0].fields)\n\n  return (\n    <>\n      <Head>\n        <title>Next.js + Contentful</title>\n        <link href=\"https://fonts.googleapis.com/css?family=EB+Garamond&display=swap\" rel=\"stylesheet\" />\n\n      </Head>\n\n      <Pane\n        padding={40}\n        marginX=\"auto\"\n        maxWidth={600}\n      >\n\n        <Heading\n          marginY={32}\n          color=\"black\"\n          fontSize={45}\n          fontFamily=\"EB Garamond\"\n        >\n          The Arburian\n        </Heading>\n        <Heading\n          marginY={32}\n          // color=\"#\"\n          fontSize={45}\n          fontFamily=\"EB Garamond\"\n        >\n          A magazine of wealth and taste.\n        </Heading>\n\n      {posts.length > 0\n          ? posts.map(p => (\n            <Pane\n              marginBottom={40}\n            >\n              <Pane\n                width={600}\n                height={200}\n                backgroundSize=\"cover\"\n                backgroundRepeat=\"no-repeat\"\n                backgroundPosition=\"50% 50%;\"\n                backgroundImage={`url(${p.fields.heroImage.fields.file.url})`}\n              />\n              <Heading\n                marginTop={16}\n                color=\"black\"\n                size={800}\n                fontFamily=\"EB Garamond\"\n                fontWeight={600}\n              >\n                {p.fields.title}\n              </Heading>\n              <Paragraph\n                marginY={16}\n                fontFamily=\"EB Garamond\"\n                fontSize={20}\n              >\n                {p.fields.description}\n              </Paragraph>\n              <Pane>\n                <Paragraph\n                  fontFamily=\"EB Garamond\"\n                  fontSize={16}\n                >\n                  by {p.fields.author.fields.name} {formatDistance(new Date(p.fields.publishDate), new Date(), { addSuffix: true })}\n                </Paragraph>\n\n              </Pane>\n          </Pane>\n        ))\n        : null}\n      </Pane>\n    </>\n  )\n\n}\n\nexport default HomePage"]},"metadata":{},"sourceType":"module"}