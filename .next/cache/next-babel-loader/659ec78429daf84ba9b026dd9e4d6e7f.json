{"ast":null,"code":"var _jsxFileName = \"/Users/eoinmurray/arbury/website/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Pane, Heading, Paragraph } from 'evergreen-ui';\nimport formatDistance from 'date-fns/formatDistance';\nimport { useEffect, useState } from 'react';\nimport Head from 'next/head';\n\nconst client = require('contentful').createClient({\n  space: process.env.CONTENTFUL_SPACE_ID,\n  accessToken: process.env.CONTENTFUL_ACCESS_TOKEN\n});\n\nfunction HomePage() {\n  async function fetchContentTypes() {\n    const types = await client.getContentTypes();\n    if (types.items) return types.items;\n    console.log('Error getting Content Types.');\n  }\n\n  async function fetchEntriesForContentType(contentType) {\n    const entries = await client.getEntries({\n      content_type: contentType.sys.id\n    });\n    if (entries.items) return entries.items;\n    console.log(`Error getting Entries for ${contentType.name}.`);\n  }\n\n  const {\n    0: posts,\n    1: setPosts\n  } = useState([]);\n  useEffect(() => {\n    async function getPosts() {\n      const contentTypes = await fetchContentTypes();\n      const allPosts = await fetchEntriesForContentType(contentTypes[0]);\n      setPosts([...allPosts]);\n    }\n\n    getPosts();\n  }, []);\n  if (posts.length > 0) console.log(posts[0].fields);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Next.js + Contentful\"), __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=EB+Garamond&display=swap\",\n    rel: \"stylesheet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), __jsx(Pane, {\n    padding: 40,\n    marginX: \"auto\",\n    maxWidth: 600,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, posts.length > 0 ? posts.map(p => __jsx(Pane, {\n    marginBottom: 32,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(Heading, {\n    color: \"black\",\n    size: 800,\n    fontFamily: \"EB Garamond\",\n    fontWeight: 600,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, p.fields.title), __jsx(Paragraph, {\n    marginTop: 8,\n    fontFamily: \"EB Garamond\",\n    fontSize: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, p.fields.description), __jsx(Pane, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(Paragraph, {\n    marginTop: 8,\n    fontFamily: \"EB Garamond\",\n    fontSize: 16,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"by \", p.fields.author.name, \" \", formatDistance(new Date(p.fields.publishDate), new Date(), {\n    addSuffix: true\n  }))))) : null));\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/eoinmurray/arbury/website/pages/index.js"],"names":["Pane","Heading","Paragraph","formatDistance","useEffect","useState","Head","client","require","createClient","space","process","env","CONTENTFUL_SPACE_ID","accessToken","CONTENTFUL_ACCESS_TOKEN","HomePage","fetchContentTypes","types","getContentTypes","items","console","log","fetchEntriesForContentType","contentType","entries","getEntries","content_type","sys","id","name","posts","setPosts","getPosts","contentTypes","allPosts","length","fields","map","p","title","description","author","Date","publishDate","addSuffix"],"mappings":"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","sourcesContent":["import { Pane, Heading, Paragraph } from 'evergreen-ui'\nimport formatDistance from 'date-fns/formatDistance'\nimport { useEffect, useState } from 'react'\nimport Head from 'next/head'\n\nconst client = require('contentful').createClient({\n  space: process.env.CONTENTFUL_SPACE_ID,\n  accessToken: process.env.CONTENTFUL_ACCESS_TOKEN\n})\n\nfunction HomePage() {\n  async function fetchContentTypes() {\n    const types = await client.getContentTypes()\n    if (types.items) return types.items\n    console.log('Error getting Content Types.')\n  }\n\n  async function fetchEntriesForContentType(contentType) {\n    const entries = await client.getEntries({\n      content_type: contentType.sys.id\n    })\n\n    if (entries.items) return entries.items\n    console.log(`Error getting Entries for ${contentType.name}.`)\n  }\n\n  const [posts, setPosts] = useState([])\n\n  useEffect(() => {\n    async function getPosts() {\n      const contentTypes = await fetchContentTypes()\n      const allPosts = await fetchEntriesForContentType(contentTypes[0])\n      setPosts([...allPosts])\n    }\n    getPosts()\n  }, [])\n\n  if (posts.length > 0) console.log(posts[0].fields)\n\n  return (\n    <>\n      <Head>\n        <title>Next.js + Contentful</title>\n        <link href=\"https://fonts.googleapis.com/css?family=EB+Garamond&display=swap\" rel=\"stylesheet\" />\n\n      </Head>\n\n      <Pane\n        padding={40}\n        marginX=\"auto\"\n        maxWidth={600}\n      >\n      {posts.length > 0\n          ? posts.map(p => (\n            <Pane\n              marginBottom={32}\n            >\n              <Heading\n                color=\"black\"\n                size={800}\n                fontFamily=\"EB Garamond\"\n                fontWeight={600}\n              >\n                {p.fields.title}\n              </Heading>\n              <Paragraph\n                marginTop={8}\n                fontFamily=\"EB Garamond\"\n                fontSize={20}\n              >\n                {p.fields.description}\n              </Paragraph>\n              <Pane>\n                <Paragraph\n                  marginTop={8}\n                  fontFamily=\"EB Garamond\"\n                  fontSize={16}\n                >\n                  by {p.fields.author.name} {formatDistance(new Date(p.fields.publishDate), new Date(), { addSuffix: true })}\n                </Paragraph>\n\n              </Pane>\n          </Pane>\n        ))\n        : null}\n      </Pane>\n    </>\n  )\n\n}\n\nexport default HomePage"]},"metadata":{},"sourceType":"module"}